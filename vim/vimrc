" Vim Plug plugin
call plug#begin('~/.vim/plugged')

Plug 'morhetz/gruvbox'
Plug 'ledger/vim-ledger'
Plug 'jlanzarotta/bufexplorer'
Plug 'plasticboy/vim-markdown'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'edkolev/tmuxline.vim'
"Plug 'python-mode/python-mode', { 'branch': 'develop' }
"Plug 'davidhalter/jedi-vim'
Plug 'Valloric/YouCompleteMe'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }

" Initialize plugin system
call plug#end()

" Use case insensitive search, except when using capital letters
set ignorecase
set smartcase

set nocompatible
set hidden
filetype plugin indent on
syntax on
set hidden
set termguicolors
" prevent to change cursor shape
set guicursor=

"show existing tab with 4 spaces width
set tabstop=4
"when indenting with '>', use 4 spaces width
set shiftwidth=4
"On pressing tab, insert 4 spaces
set expandtab

"make backspace behave in a sane manner
set backspace=indent,eol,start

"print a line under the cursor
set cursorline

"work only in decimal
set nrformats=

"set the ruler
set ruler

"set wildmode(autocompletition)
set wildmode=longest,list,full
set wildmenu

"set vim colorscheme
colorscheme gruvbox
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

"disable mouse and bind for enabling  and disabling
if has('mouse')
    set mouse=
    if !has('nvim')
    set ttymouse=xterm2
    endif
    nnoremap <Leader>m :set mouse=a<CR>
    nnoremap <Leader>M :set mouse=<CR>
endif


"bind \R reload vimrc
nnoremap <Leader>R :source $MYVIMRC<CR>

"display status line always
set laststatus=2

"256 colors
"set t_Co=256

"bind \s to save
noremap <Leader>s :update<CR>

"bind \p to paste toggle
set pastetoggle=<Leader>P

" terminal mode escape remap, escape in term mode is ctrl-v esc
if has('nvim')
    tnoremap <Esc> <C-\><C-n>
    tnoremap <C-v><Esc> <Esc>
endif

" show terminal cursor when in normal mode in red
if has('nvim')
    highlight! link TermCursor Cursor
    highlight! TermCursorNC guibg=red guifg=white ctermbg=1 ctermfg=15
endif

" prevent nested nvim remember to set $VISUAL=nvr in bashrc
if has('nvim') && executable('nvr')
let $VISUAL="nvr -cc split --remote-wait +'set bufhidden=wipe'"
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Buffers - explore/next/previous: Alt-F12, F12, Shift-F12.
nnoremap <silent> <M-F12> :BufExplorer<CR>
nnoremap <silent> <F12> :bn<CR>
nnoremap <silent> <S-F12> :bp<CR>


"Update and upgrade Vim Plug
command! PU PlugUpdate | PlugUpgrade


"enable pymode run and bind it to \r
"autocmd FileType python setlocal omnifunc=python3complete#Complete
"let g:python3_host_prog = '/usr/bin/python3'
"let g:pymode_run = 1
"let g:pymode_run_bind = '<leader>r'
"let g:pymode_python = 'python3'
"let g:pymode_rope_completion = 1

"disable autocomplete documentation
set completeopt=menu

"vim-airline theme
let g:airline_theme="dark"

"bind \p to nerdtree
nnoremap <Leader>p :NERDTreeToggle<CR>

"generate tmux bar airline stile
nnoremap <Leader>t :TmuxlineSnapshot! ~/.tmux/tmuxline.tmux.conf<CR>

"Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1

"Show just the filename
let g:airline#extensions#tabline#fnamemod = ':t'

" airline powerline fonts (to install sudo apt-get install fonts-powerline)
" let g:airline_powerline_fonts = 1


"vimwiki bind key
:nmap <Leader>wq <Plug>VimwikiVSplitLink
:nmap <Leader>we <Plug>VimwikiSplitLink

" Fuzzy finder bind key
nnoremap <C-p> :<C-u>FZF<CR>
